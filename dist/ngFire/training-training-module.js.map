{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/add/operator/map.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/map.js","webpack:///./src/app/training/current-training/current-training.component.css","webpack:///./src/app/training/current-training/current-training.component.html","webpack:///./src/app/training/current-training/current-training.component.ts","webpack:///./src/app/training/current-training/stop-training/stop-training.component.css","webpack:///./src/app/training/current-training/stop-training/stop-training.component.html","webpack:///./src/app/training/current-training/stop-training/stop-training.component.ts","webpack:///./src/app/training/new-training/new-training.component.css","webpack:///./src/app/training/new-training/new-training.component.html","webpack:///./src/app/training/new-training/new-training.component.ts","webpack:///./src/app/training/past-trainings/past-trainings.component.css","webpack:///./src/app/training/past-trainings/past-trainings.component.html","webpack:///./src/app/training/past-trainings/past-trainings.component.ts","webpack:///./src/app/training/training-routing.module.ts","webpack:///./src/app/training/training.component.css","webpack:///./src/app/training/training.component.html","webpack:///./src/app/training/training.component.ts","webpack:///./src/app/training/training.module.ts"],"names":[],"mappings":"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","file":"training-training-module.js","sourcesContent":["import { Observable } from 'rxjs';\nimport { map } from '../../operator/map';\nObservable.prototype.map = map;\n//# sourceMappingURL=map.js.map","import { map as higherOrderMap } from 'rxjs/operators';\nexport function map(project, thisArg) {\n    return higherOrderMap(project, thisArg)(this);\n}\n//# sourceMappingURL=map.js.map","module.exports = \".current-training{\\r\\n    padding: 30px;\\r\\n}\"","module.exports = \"<section class=\\\"current-training\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <mat-progress-spinner mode=\\\"determinate\\\" [value]=\\\"progress\\\" color=\\\"accent\\\"></mat-progress-spinner>\\n    <h1> {{progress}}% </h1>\\n    <p> You can do it ! </p>\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onStop()\\\">Stop</button>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { StopTrainingComponent } from './stop-training/stop-training.component';\nimport { TrainingService } from '../training.service';\n\n@Component({\n  selector: 'app-current-training',\n  templateUrl: './current-training.component.html',\n  styleUrls: ['./current-training.component.css']\n})\nexport class CurrentTrainingComponent implements OnInit {\n  progress = 0;\n  timer: number;\n\n  constructor(private dialog: MatDialog, private trainingService: TrainingService) { }\n\n  ngOnInit() {\n   this.startOrResumeTimer();\n  }\n\n  startOrResumeTimer() {\n    const step = this.trainingService.getRunningExercice().duration / 100 * 1000 ;\n    this.timer = setInterval(() => {\n      this.progress = this.progress + 1;\n      if (this.progress >= 100) {\n        this.trainingService.completeExercice();\n        clearInterval(this.timer);\n      }\n    }, step);\n  }\n\n  onStop() {\n    clearInterval(this.timer);\n    const dialogRef = this.dialog.open(StopTrainingComponent, {\n      data: {\n        progress: this.progress\n      }\n    });\n\n   ;    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.trainingService.cancelExercice(this.progress);\n      } else {\n        this.startOrResumeTimer();\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Are you sure ?</h1>\\n<mat-dialog-content>\\n  <p> You've made {{passedData.progress}}%</p>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\">I'm done</button>\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">Keep Going</button>\\n\\n</mat-dialog-actions>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-stop-training',\n  templateUrl: './stop-training.component.html',\n  styleUrls: ['./stop-training.component.css']\n})\nexport class StopTrainingComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public passedData: any) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".new-training{\\r\\n    padding:30px;\\r\\n\\r\\n}\\r\\n\\r\\nmat-card{\\r\\n    padding: 2rem 1rem;\\r\\n}\\r\\n\\r\\nspan.title{\\r\\n    font-family: Segoe UI;\\r\\n    text-align: center;\\r\\n    font-weight: 100;\\r\\n    font-size: 19px;\\r\\n    text-transform: uppercase;\\r\\n}\"","module.exports = \"<section class=\\\"new-training\\\" fxLayout fxLayoutAlign=\\\"center\\\">\\n  <form (ngSubmit)=\\\"onStartTraining(f)\\\" #f=\\\"ngForm\\\">\\n    <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"400px\\\">\\n      <mat-card-title fxLayoutAlign=\\\"center\\\"> \\n        <span class=\\\"title\\\">\\n            LET'S DO THIS !\\n\\n        </span>\\n      </mat-card-title>\\n      <mat-card-content fxLayoutAlign=\\\"center\\\">\\n        <mat-form-field *ngIf=\\\"!isLoading && myExercices\\\">\\n          <mat-select placeholder=\\\"Your exercice\\\" ngModel name=\\\"exercice\\\" required>\\n            <mat-option *ngFor=\\\"let singleEx of myExercices\\\" [value]=\\\"singleEx.id\\\">\\n              {{singleEx.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-card-content>\\n      <mat-card-actions fxLayoutAlign=\\\"center\\\" *ngIf=\\\"!isLoading\\\">\\n        <button *ngIf=\\\"myExercices\\\" type=\\\"submit\\\" mat-button [disabled]=\\\"f.invalild\\\">Start</button>\\n        <button *ngIf=\\\"!myExercices\\\" type=\\\"button\\\" mat-button (click)=\\\"fetchExercices()\\\">Pick an exercice</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </form>\\n</section>\"","import { Component, OnInit, OnDestroy, } from '@angular/core';\nimport { TrainingService } from '../training.service';\nimport { Exercice } from '../exercice.model';\nimport { NgForm } from '@angular/forms';\nimport 'rxjs/add/operator/map';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UIService } from '../../shared/ui.service';\n@Component({\n  selector: 'app-new-training',\n  templateUrl: './new-training.component.html',\n  styleUrls: ['./new-training.component.css']\n})\nexport class NewTrainingComponent implements OnInit, OnDestroy {\n  myExercices: Exercice[];\n  exercicesSub: Subscription;\n  private loadSpinner: Subscription;\n  isLoading = false;\n  constructor(private trainingService: TrainingService, private db: AngularFirestore, private uiService: UIService) { }\n\n  ngOnInit() {\n    this.loadSpinner = this.uiService.loadingStateChange.subscribe(res => this.isLoading = res);\n    this.exercicesSub = this.trainingService.exercicesChanged.subscribe(exercices => {\n      this.myExercices = exercices;\n    });\n  }\n\n  onStartTraining(form: NgForm) {\n    this.trainingService.startExercise(form.value.exercice);\n  }\n  fetchExercices() {\n    this.trainingService.fetchAvailableExercices();\n\n  }\n  ngOnDestroy() {\n    if (this.exercicesSub) {\n      this.exercicesSub.unsubscribe();\n\n    }\n    if (this.loadSpinner) {\n      this.loadSpinner.unsubscribe();\n\n    }\n  }\n\n}\n","module.exports = \".row{margin: 0};\"","module.exports = \"<div fxLayoutAlign =\\\"center center\\\">\\n  <mat-form-field fxFlex=\\\"35%\\\">\\n    <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8 offset-md-2\\\">\\n\\n\\n<mat-table [dataSource]=\\\"dataSource\\\" matSort >\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.date.toDate() | date}}</mat-cell>\\n  </ng-container>\\n  \\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef>Exercice</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.name}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"calories\\\" >\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Calories</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.calories | number}}</mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"duration\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.duration | number}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"state\\\">\\n    <mat-header-cell *matHeaderCellDef>State</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.state }}</mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\n</mat-table>\\n<mat-paginator [length]=\\\"100\\\"\\n              [pageSize]=\\\"3\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n</mat-paginator>\\n</div>\\n</div>\\n\"","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Exercice } from '../exercice.model';\nimport { TrainingService } from '../training.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-past-trainings',\n  templateUrl: './past-trainings.component.html',\n  styleUrls: ['./past-trainings.component.css']\n})\nexport class PastTrainingsComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  displayedColumns = ['date', 'name', 'calories', 'duration', 'state'];\n  dataSource = new MatTableDataSource<Exercice>();\n  exercicesSub: Subscription;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private trainingService: TrainingService) { }\n\n  ngOnInit() {\n    this.exercicesSub = this.trainingService.finishedExercicesChanged.subscribe((exercices: Exercice[]) => {\n      this.dataSource.data = exercices;\n    });\n    this.trainingService.fetchCompletedOrCancelledExercice();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnDestroy() {\n    if (this.exercicesSub) {\n      this.exercicesSub.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TrainingComponent } from './training.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: TrainingComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class TrainingRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<mat-tab-group *ngIf=\\\"!onGoingTraining\\\">\\n  <mat-tab  label=\\\"New Exercices\\\"> \\n    <app-new-training></app-new-training>\\n  </mat-tab>\\n  <mat-tab label=\\\"Past Exercices\\\">\\n    <app-past-trainings></app-past-trainings>\\n  </mat-tab>\\n</mat-tab-group>\\n<app-current-training *ngIf=\\\"onGoingTraining\\\"></app-current-training>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TrainingService } from './training.service';\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.css']\n})\nexport class TrainingComponent implements OnInit, OnDestroy {\n  onGoingTraining = false;\n  exerciceSub: Subscription;\n  constructor(private trainingService: TrainingService) { }\n\n  ngOnInit() {\n    this.exerciceSub = this.trainingService.exerciceChanged.subscribe(\n      exercice => {\n        if (exercice) {\n          this.onGoingTraining = true;\n        } else {\n          this.onGoingTraining = false;\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.exerciceSub) {\n      this.exerciceSub.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CurrentTrainingComponent } from './current-training/current-training.component';\r\nimport { NewTrainingComponent } from './new-training/new-training.component';\r\nimport { PastTrainingsComponent } from './past-trainings/past-trainings.component';\r\nimport { TrainingComponent } from './training.component';\r\nimport { StopTrainingComponent } from './current-training/stop-training/stop-training.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TrainingRoutingModule } from './training-routing.module';\r\n\r\n@NgModule({\r\n    declarations: [CurrentTrainingComponent,\r\n        NewTrainingComponent,\r\n        PastTrainingsComponent,\r\n        TrainingComponent,\r\n        StopTrainingComponent\r\n    ],\r\n    imports: [\r\n        SharedModule,\r\n        TrainingRoutingModule\r\n    ],\r\n    exports: [],\r\n    entryComponents: [StopTrainingComponent]\r\n})\r\nexport class TrainingModule { }\r\n"],"sourceRoot":""}